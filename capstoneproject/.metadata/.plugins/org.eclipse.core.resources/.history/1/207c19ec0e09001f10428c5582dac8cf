package com.capstone.mobileservice.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.aspectj.lang.annotation.Before;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.capstone.mobileservice.controller.MobileController;
import com.capstone.mobileservice.entity.Mobile;
import com.capstone.mobileservice.service.MobileService;

public class MobileControllerTest {

	@InjectMocks
	private MobileController mobileController;

	@Mock
	private MobileService mobileService;

	@Before
	public void init() {
		MockitoAnnotations.initMocks(this);
	}

	@Test
	public void testGetAllMobiles() {
		List<Mobile> mobiles = new ArrayList<>();
		mobiles.add(new Mobile(1L, "Samsung", "Galaxy S20", 1000));
		mobiles.add(new Mobile(2L, "Apple", "iPhone 12", 1200));

		Mockito.when(mobileService.getAllMobiles()).thenReturn(mobiles);

		List<Mobile> result = mobileController.getAllMobiles();

		assertNotNull(result);
		assertEquals(2, result.size());
	}

	@Test
	public void testGetMobileById() {
		Mobile mobile = new Mobile(1L, "Samsung", "Galaxy S20", 1000);
		Mockito.when(mobileService.getMobileById(1L)).thenReturn(Optional.of(mobile));

		ResponseEntity<Mobile> response = mobileController.getMobileById(1L);

		assertNotNull(response);
		assertEquals(HttpStatus.OK, response.getStatusCode());
		assertEquals(mobile, response.getBody());
	}

	@Test
	public void testSaveMobile() {
		Mobile mobile = new Mobile(1L, "Samsung", "Galaxy S20", 1000);
		Mockito.when(mobileService.saveMobile(Mockito.any(Mobile.class))).thenReturn(mobile);

		ResponseEntity<Mobile> response = mobileController.saveMobile(mobile);

		assertNotNull(response);
		assertEquals(HttpStatus.CREATED, response.getStatusCode());
		assertEquals(mobile, response.getBody());
	}

}
